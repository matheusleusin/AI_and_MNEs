Units <- DataLong_Subs_2006[DataLong_Subs_2006$treat == 1,]
length(unique(Units$id)) #1155
rm(Units)
#Simple Aggregation
example_attgt <- att_gt(yname = "NoPatentsYearGUOtotal",
tname = "CurrentYear",
idname = "id",
gname = "first.treat",
xformla = ~1, #Agegroup + Size_class + NoPatentsYearGUOtotal+ CategoryNace, #complete formula
data = DataLong_Subs_2006
)
agg.simple <- aggte(example_attgt, type = "simple")
summary(agg.simple) #effect 25.0168, error:  4.9943, [95%  Conf. Int.]: 15.2281     34.8054 *
#aggregated of type "simple" doesn't allow plots;
#Dynamic Effects and Event Studies
agg.es <- aggte(example_attgt, type = "dynamic")
summary(agg.es) #effect 35.4822, error: 7.0511, [95%  Conf. Int.]:   21.6622     49.3022 *
ggdid(agg.es)
jpeg("Figures/Top4_All_MNElevel_EffectPatents.jpg", width = 10, height = 4, units = 'in', res = 400)
ggdid(agg.es, title = "a) Average effect by length of exposure for the MNE - All companies") +
theme(legend.position="right") +
ylab("Number of Patents owned by the MNE") +
xlab("Length of exposure") +
scale_color_manual(values=c("grey70","#3399FF")) + #3399FF
labs(color   = "Treatment")+
geom_vline(xintercept = 0, linetype="dotted",
color = "black", size=1, alpha = 0.3)
dev.off()
#calculate the mean NoPatentsYearGUOtotal of treated (1) versus non treated (0)
DataLong_Subs_sim3 <- data.table(DataLong_Subs_2006)
DataLong_Subs_sim3$treat <- as.numeric(ifelse(DataLong_Subs_sim3$first.treat==0,0,1))
DataLong_Subs_sim3[first.treat == 0 | first.treat != 0 , mean(NoPatentsYearGUOtotal), by = treat ] #
#62.48194 for non-treated (0) and 108.51725 for treated (1)
#considering the effects seen (25.0168 for simple and 35.4822 for dynamic):
25.0168/62.48194 #0.4003845 for simple (regarding the turnover, the increase was: 0.1442532 increase on average for the simple)
35.4822/62.48194 #0.5678793 for dynamic(regarding the turnover, the increase was: 0.2509677 for dynamic)
rm(DataLong_Subs_sim3)
#11.3.5.2.Linked to the companies for which there is Turnover information
#stopped here -----
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
DataLong_Subs <- read.csv("Data/DataLong_Subs_sim_MNEs2.csv", sep = ";", header = TRUE, dec=",")
#DataLong_Subs_sim222 <- DataLong_Subs_sim222[DataLong_Subs_sim222$CurrentYear>2010,] #CHANGED HERE TO 2010 INSTEAD OF 2009
#DataLong_Subs_test <- DataLong_Subs[,c(20,23:25)]
#DataLong_Subs_sim222 <- left_join(DataLong_Subs_sim222, DataLong_Subs_test, by = c("id", "CurrentYear"))
#write.csv2(DataLong_Subs_sim222, file = "Data/DataLong_Subs_sim_MNEs2.csv", row.names = F)
DataLong_Subs_sim <- DataLong_Subs
DataLong_Subs_sim_Turnover <- DataLong_Subs_sim#[is.na(DataLong_Subs_sim$Turnover_extended)==F,]
#fill missing data with the data from the previous year;
DataLong_Subs_sim %<>% group_by(id) %>%
mutate(Turnover_extended = na.locf0(Turnover)) %>%
mutate(RAndD_Expenses_extended = na.locf0(RAndD_Expenses)) %>%
ungroup
#test <- DataLong_Subs_sim[DataLong_Subs_sim$Company == "AE0047144616",]
DataLong_Subs_sim %<>% group_by(id) %>%
mutate(Turnover_extended = na.locf0(Turnover_extended, fromLast = TRUE)) %>%
mutate(RAndD_Expenses_extended = na.locf0(RAndD_Expenses_extended, fromLast = TRUE)) %>%
ungroup
#test <- DataLong_Subs_sim[DataLong_Subs_sim$Company == "AE0047144616",] #now it is correct
table(is.na(DataLong_Subs_sim$Turnover_extended)) #6156 T out of 56214  F
table(is.na(DataLong_Subs_sim$RAndD_Expenses_extended)) #29268  T out of 33102  F
DataLong_Subs_sim_Turnover <- DataLong_Subs_sim[is.na(DataLong_Subs_sim$Turnover_extended)==F,]
DataLong_Subs_sim_RAndD_Expenses <- DataLong_Subs_sim[is.na(DataLong_Subs_sim$RAndD_Expenses_extended)==F,]
#descriptives for Turnover:
Descript_data<-DataLong_Subs_sim_Turnover[DataLong_Subs_sim_Turnover$CurrentYear==2019,]
table(Descript_data$Size_class)
#Large company Medium sized company        Small company   Very large company
#724                  496                  263                 4763
rm(Descript_data)
#descriptives for RAndD_Expenses:
Descript_data<-DataLong_Subs_sim_RAndD_Expenses[DataLong_Subs_sim_RAndD_Expenses$CurrentYear==2019,]
table(Descript_data$Size_class)
#Large company Medium sized company   Very large company
#67                   18                 3593
rm(Descript_data)
#calculate the mean Turnover_extended of treated (1) versus non treated (0)
DataLong_Subs_sim3 <- data.table(DataLong_Subs_sim_Turnover)
DataLong_Subs_sim3$treat <- as.numeric(ifelse(DataLong_Subs_sim3$first.treat==0,0,1))
DataLong_Subs_sim3[first.treat == 0 | first.treat != 0 , mean(Turnover_extended), by = treat ] #
#868362.8 for 0 and 2265071.0 for 1
rm(DataLong_Subs_sim3)
DataLong_Subs_sim_Turnover <- DataLong_Subs_sim#[is.na(DataLong_Subs_sim$Turnover_extended)==F,]
table(DataLong_Subs_sim$CurrentYear)
DataLong_Subs_sim_Turnover %<>%
group_by(id) %>%
mutate(Number_NAs = sum(is.na(Turnover)==T)) %>%
ungroup()
table(DataLong_Subs_sim_Turnover$Number_NAs)
(3717+2844+3033+2187+2295+1719+1764+5553+6156) #29268
29268/(29268+33102)
DataLong_Subs_sim_Turnover<- DataLong_Subs_sim_Turnover[DataLong_Subs_sim_Turnover$Number_NAs < 3,] #with the log10 or log100, the results remain
#stable with any threshold
#fill missing data with the relatedness from the previous year;
DataLong_Subs_sim_Turnover %<>% group_by(id) %>%
mutate(Turnover_extended = na.locf0(Turnover)) %>%
mutate(RAndD_Expenses_extended = na.locf0(RAndD_Expenses)) %>%
ungroup
DataLong_Subs_sim_Turnover %<>% group_by(id) %>%
mutate(Turnover_extended = na.locf0(Turnover_extended, fromLast = TRUE)) %>%  # changed from Turnover to Turnover_extended
mutate(RAndD_Expenses_extended = na.locf0(RAndD_Expenses_extended, fromLast = TRUE)) %>%
ungroup
#now enters the new equation:
length(unique(DataLong_Subs_sim_Turnover$id)) #4407
#DataLong_Subs_sim_Turnover$ShareTurnoverPatents <- (DataLong_Subs_sim_Turnover$NoPatentsYearGUOtotal)/log10(DataLong_Subs_sim_Turnover$Turnover_extended)
DataLong_Subs_sim_Turnover$LogTurnoverExtended <- log10(DataLong_Subs_sim_Turnover$Turnover_extended)
length(unique(DataLong_Subs_sim_Turnover$id)) #4407
#exclude problematic values:
#1.Infinte values
Exclude1<-DataLong_Subs_sim_Turnover[DataLong_Subs_sim_Turnover$LogTurnoverExtended == Inf,] #37 observations
'%notin%' <- Negate('%in%')
DataLong_Subs_sim_Turnover<-DataLong_Subs_sim_Turnover[DataLong_Subs_sim_Turnover$id %notin% Exclude1$id,]
rm(Exclude1)
#2. -Infinte
Exclude2<-DataLong_Subs_sim_Turnover[DataLong_Subs_sim_Turnover$LogTurnoverExtended == -Inf,] #569 observations
DataLong_Subs_sim_Turnover<-DataLong_Subs_sim_Turnover[DataLong_Subs_sim_Turnover$id %notin% Exclude2$id,] #
rm(Exclude2)
#3. NaN
Exclude2<-DataLong_Subs_sim_Turnover[is.nan(DataLong_Subs_sim_Turnover$LogTurnoverExtended) == T,] #20 observations
DataLong_Subs_sim_Turnover<-DataLong_Subs_sim_Turnover[DataLong_Subs_sim_Turnover$id %notin% Exclude2$id,] #
rm(Exclude2)
#4. NA
Exclude3<-DataLong_Subs_sim_Turnover[is.na(DataLong_Subs_sim_Turnover$LogTurnoverExtended) == T,] #0
DataLong_Subs_sim_Turnover<-DataLong_Subs_sim_Turnover[DataLong_Subs_sim_Turnover$id %notin% Exclude3$id,] #nothing changed
rm(Exclude3)
#double check descriptives
Descript_data<-DataLong_Subs_sim_Turnover[DataLong_Subs_sim_Turnover$CurrentYear==2019,]
table(Descript_data$Size_class)
#Large company Medium sized company        Small company   Very large company
#324                  162                   42                 3731
rm(Descript_data)
3731/(324+162+42+3731) #0.8760272
#check number of treated units:
Units <- DataLong_Subs_sim_Turnover[DataLong_Subs_sim_Turnover$treat == 1,]
length(unique(Units$id)) #690
rm(Units)
TurnoverCompanies<-DataLong_Subs_2006[DataLong_Subs_2006$id %in% DataLong_Subs_sim_Turnover$id,]
length(unique(TurnoverCompanies$id)) #4259
length(unique(DataLong_Subs_sim_Turnover$id)) #4259
length(unique(DataLong_Subs_2006$id)) #6930
#Simple Aggregation -for some reason, producing distinct results now
example_attgt <- att_gt(yname = "NoPatentsYearGUOtotal",
tname = "CurrentYear",
idname = "id",
gname = "first.treat",
xformla = ~1, #Agegroup + Size_class + NoPatentsYearGUOtotal+ CategoryNace, #complete formula
data = TurnoverCompanies
)
agg.simple <- aggte(example_attgt, type = "simple")
summary(agg.simple) #effect 32.1339, error:  6.5797, [95%  Conf. Int.]: 19.238     45.0298 *
#aggregated of type "simple" doesn't allow plots;
#Dynamic Effects and Event Studies
agg.es <- aggte(example_attgt, type = "dynamic")
summary(agg.es) #effect 43.9521, error: 9.6614, [95%  Conf. Int.]:  25.016     62.8881 *
ggdid(agg.es)
#exclude holding companies
#New: effect for MNE without holding-related sectors (6420 and 7010)
table(TurnoverCompanies$CategoryNace) #1372 from 6420 and 826 from 7010;
Data_Long_filtered <- TurnoverCompanies[TurnoverCompanies$CategoryNace != 6420,]
Data_Long_filtered <- Data_Long_filtered[Data_Long_filtered$CategoryNace != 7010,]
table(Data_Long_filtered$CategoryNace) #0 from 6420 and 0 from 7010;
TreatedUnits <- Data_Long_filtered[Data_Long_filtered$treat == 1,]
length(unique(TreatedUnits$id)) #669
table(TreatedUnits$CategoryNace) #no 6420 nor 7010
TreatedUnits <- TurnoverCompanies[TurnoverCompanies$treat == 1,]
length(unique(TreatedUnits$id)) #690
table(TreatedUnits$CategoryNace)
rm(TreatedUnits)
#3.2.5.2.Simple Aggregation - robustness without holdings
example_attgt <- att_gt(yname = "NoPatentsYearGUOtotal",
tname = "CurrentYear",
idname = "id",
gname = "first.treat",
xformla = ~1,
data = Data_Long_filtered
)
agg.simple <- aggte(example_attgt, type = "simple")
summary(agg.simple) #effect 31.5452, error:  7.7912, [95%  Conf. Int.]: 16.2747     46.8156 *
#aggregated of type "simple" doesn't allow plots; #32.7225
#Dynamic Effects and Event Studies
agg.es <- aggte(example_attgt, type = "dynamic")
summary(agg.es) #effect 44.7753, error: 11.5553, [95%  Conf. Int.]:  22.1274     67.4233 *
ggdid(agg.es)
jpeg("Figures/Top3_MNElevel_EffectPatents_2_noholdings.jpg", width = 10, height = 4, units = 'in', res = 400)
ggdid(agg.es, title = "c) Average effect by length of exposure for the MNE - Companies with Turnover data available - holdings excluded") +
theme(legend.position="right") +
ylab("Number of Patents owned by the MNE") +
xlab("Length of exposure") +
scale_color_manual(values=c("grey70","orange")) + #3399FF
labs(color   = "Treatment")+
geom_vline(xintercept = 0, linetype="dotted",
color = "black", size=1, alpha = 0.3)
dev.off()
#calculate the mean NoPatentsYearGUOtotal of treated (1) versus non treated (0)
DataLong_Subs_sim3 <- data.table(TurnoverCompanies)
DataLong_Subs_sim3$treat <- as.numeric(ifelse(DataLong_Subs_sim3$first.treat==0,0,1))
DataLong_Subs_sim3[first.treat == 0 | first.treat != 0 , mean(NoPatentsYearGUOtotal), by = treat ] #
#89.89707 for non-treated (0) and 162.58126 for treated (1)
#considering the effects seen (32.7225 for simple and 44.8831 for dynamic):
32.7225/89.89707 #0.3574521 for simple (regarding the turnover, the increase was: 0.1442532 increase on average for the simple)
44.8831/89.89707 #0.4889158 for dynamic(regarding the turnover, the increase was: 0.2509677 for dynamic)
rm(DataLong_Subs_sim3)
#calculate the mean NoPatentsYearGUOtotal of treated (1) versus non treated (0) excluding holdings:
DataLong_Subs_sim3 <- data.table(Data_Long_filtered)
DataLong_Subs_sim3$treat <- as.numeric(ifelse(DataLong_Subs_sim3$first.treat==0,0,1))
DataLong_Subs_sim3[first.treat == 0 | first.treat != 0 , mean(NoPatentsYearGUOtotal), by = treat ] #
#106.3985 for non-treated (0) and 192.7848 for treated (1)
#92.03545 for non-treated (0) and 165.69144 for treated (1)
#considering the effects seen (31.5452 for simple and 44.7753 for dynamic):
32.7225/92.03545 #0.2964816 for simple
44.8831/92.03545 #0.4208264 for dynamic
rm(DataLong_Subs_sim3)
#Simple Aggregation
example_attgt <- att_gt(yname = "PatentsPerUnitTurnover",
tname = "CurrentYear",
idname = "id",
gname = "first.treat",
xformla = ~1, #Agegroup + Size_class + NoPatentsYearGUOtotal+ CategoryNace, #complete formula
data = DataLong_Subs_sim_Turnover
)
#stopped here -----
#11.3.7.1.number of patents generated per unit of Turnover (New one)----
#the Turnover extended only was replaced by number of patents generated per unit of Turnover
#double check descriptives for Turnover:
Descript_data<-DataLong_Subs_sim_Turnover[DataLong_Subs_sim_Turnover$CurrentYear==2019,]
table(Descript_data$Size_class)
#Large company Medium sized company        Small company   Very large company
#324                  162                   42                 3731
rm(Descript_data)
#check number of treated units:
Units <- DataLong_Subs_sim_RAndD_Expenses[DataLong_Subs_sim_RAndD_Expenses$treat == 1,]
length(unique(Units$id)) #636
rm(Units)
DataLong_Subs_sim_Turnover$PatentsPerUnitTurnover <- DataLong_Subs_sim_Turnover$NoPatentsYearGUOtotal/DataLong_Subs_sim_Turnover$Turnover_extended
length(unique(DataLong_Subs_sim_Turnover$id)) #4259
#exclude problematic values:
#1.Infinte values
Exclude1<-DataLong_Subs_sim_Turnover[DataLong_Subs_sim_Turnover$PatentsPerUnitTurnover == Inf,] #0 observations
'%notin%' <- Negate('%in%')
DataLong_Subs_sim_Turnover<-DataLong_Subs_sim_Turnover[DataLong_Subs_sim_Turnover$id %notin% Exclude1$id,] #nothing changed
rm(Exclude1)
#2. -Infinte
Exclude2<-DataLong_Subs_sim_Turnover[DataLong_Subs_sim_Turnover$PatentsPerUnitTurnover == -Inf,] #0 observations
DataLong_Subs_sim_Turnover<-DataLong_Subs_sim_Turnover[DataLong_Subs_sim_Turnover$id %notin% Exclude2$id,] #
rm(Exclude2)
#3. NaN
Exclude2<-DataLong_Subs_sim_Turnover[is.nan(DataLong_Subs_sim_Turnover$PatentsPerUnitTurnover) == T,] #0 observations
DataLong_Subs_sim_Turnover<-DataLong_Subs_sim_Turnover[DataLong_Subs_sim_Turnover$id %notin% Exclude2$id,] #nothing happened
rm(Exclude2)
#4. NA
Exclude3<-DataLong_Subs_sim_Turnover[is.na(DataLong_Subs_sim_Turnover$PatentsPerUnitTurnover) == T,] #0
DataLong_Subs_sim_Turnover<-DataLong_Subs_sim_Turnover[DataLong_Subs_sim_Turnover$id %notin% Exclude3$id,] #nothing changed
rm(Exclude3)
#4. NA
Exclude3<-DataLong_Subs_sim_Turnover[is.na(DataLong_Subs_sim_Turnover$PatentsPerUnitTurnover) == T,] #0
DataLong_Subs_sim_Turnover<-DataLong_Subs_sim_Turnover[DataLong_Subs_sim_Turnover$id %notin% Exclude3$id,] #nothing changed
rm(Exclude3)
#Simple Aggregation
example_attgt <- att_gt(yname = "PatentsPerUnitTurnover",
tname = "CurrentYear",
idname = "id",
gname = "first.treat",
xformla = ~1, #Agegroup + Size_class + NoPatentsYearGUOtotal+ CategoryNace, #complete formula
data = DataLong_Subs_sim_Turnover
)
#Dropped 50 units that were already treated in the first period.
agg.simple <- aggte(example_attgt, type = "simple")
summary(agg.simple) #effect -0.007, error:  0.0144, [95%  Conf. Int.]: -0.0353      0.0212
#Dynamic Effects and Event Studies
agg.es <- aggte(example_attgt, type = "dynamic")
summary(agg.es) #effect -0.0127, error: 0.0145 , [95%  Conf. Int.]:  -0.0411      0.0157
ggdid(agg.es)
jpeg("Figures/NewIndicator_PatentsPerUnitTurnover.jpg", width = 10, height = 3, units = 'in', res = 400)
ggdid(agg.es, title = "a) Average effect by length of exposure for the MNE") +
theme(legend.position="right") +
ylab("No Patents per unit turnover") +
xlab("Length of exposure") +
scale_color_manual(values=c("grey70","#33CC00")) + #66CC33 339900
labs(color   = "Treatment")+
geom_vline(xintercept = 0, linetype="dotted",
color = "black", size=1, alpha = 0.3)
dev.off()
#calculate the mean Turnover_extended of treated (1) versus non treated (0)
DataLong_Subs_sim3 <- data.table(DataLong_Subs_sim_Turnover)
DataLong_Subs_sim3$treat <- as.numeric(ifelse(DataLong_Subs_sim3$first.treat==0,0,1))
DataLong_Subs_sim3[first.treat == 0 | first.treat != 0 , mean(PatentsPerUnitTurnover), by = treat ] #
#0.00839168 for non-treated (0) and 0.00984794 for treated (1)
#considering the effects seen (-0.007 for simple and -0.0127 for dynamic):
0.007/0.00839168 #0.8341595 decrease on average for the simple
0.0127/0.00839168 #1.513404 for dynamic
rm(DataLong_Subs_sim3)
#calculate the mean Turnover_extended of treated (1) versus non treated (0)
DataLong_Subs_sim3 <- data.table(DataLong_Subs_sim_Turnover)
DataLong_Subs_sim3$treat <- as.numeric(ifelse(DataLong_Subs_sim3$first.treat==0,0,1))
DataLong_Subs_sim3[first.treat == 0 | first.treat != 0 , mean(Turnover_extended), by = treat ]
#1,136,101 for non-treated and 3,235,768 for treated;
1136101+1136101*1.9 #roughly 190% increase in turnover;
#now excluding holding companies:
#New: effect for MNE without holding-related sectors (6420 and 7010)
table(DataLong_Subs_sim_Turnover$CategoryNace) #882 from 6420 and 531 from 7010;
Data_Long_filtered <- DataLong_Subs_sim_Turnover[DataLong_Subs_sim_Turnover$CategoryNace != 6420,]
Data_Long_filtered <- Data_Long_filtered[Data_Long_filtered$CategoryNace != 7010,]
table(Data_Long_filtered$CategoryNace) #0 from 6420 and 0 from 7010;
TreatedUnits <- Data_Long_filtered[Data_Long_filtered$treat == 1,]
length(unique(TreatedUnits$id)) #669
table(TreatedUnits$CategoryNace) #no 6420 nor 7010
TreatedUnits <- DataLong_Subs_sim_Turnover[DataLong_Subs_sim_Turnover$treat == 1,]
length(unique(TreatedUnits$id)) #690, so 21 treated units are lost by excluding both codes, 99 lines of them are from code 6420, 90 lines from 7010
table(TreatedUnits$CategoryNace)
rm(TreatedUnits)
#3.2.5.2.Simple Aggregation - robustness without holdings
example_attgt <- att_gt(yname = "PatentsPerUnitTurnover",
tname = "CurrentYear",
idname = "id",
gname = "first.treat",
xformla = ~1, #Agegroup + Size_class + NoPatentsYearGUOtotal+ CategoryNace, #complete formula
data = Data_Long_filtered
)
#Dropped 49 units that were already treated in the first period.
agg.simple <- aggte(example_attgt, type = "simple")
summary(agg.simple) #effect -0.0132, error:  0.0143, [95%  Conf. Int.]: -0.0412      0.0148
#Dynamic Effects and Event Studies
agg.es <- aggte(example_attgt, type = "dynamic")
summary(agg.es) #effect -0.0134, error: 0.012 , [95%  Conf. Int.]:  -0.0369      0.0102
ggdid(agg.es)
jpeg("Figures/NewIndicator_PatentsPerUnitTurnover_noholdings.jpg", width = 10, height = 3, units = 'in', res = 400)
ggdid(agg.es, title = "b) Average effect by length of exposure for the MNE - no holdings") +
theme(legend.position="right") +
ylab("No. Patents per unit turnover") +
xlab("Length of exposure") +
scale_color_manual(values=c("grey70","orange")) + #tan3
labs(color   = "Treatment")+
geom_vline(xintercept = 0, linetype="dotted",
color = "black", size=1, alpha = 0.3)
dev.off()
#calculate the mean Turnover_extended of treated (1) versus non treated (0) excluding holdings
DataLong_Subs_sim3 <- data.table(Data_Long_filtered)
DataLong_Subs_sim3$treat <- as.numeric(ifelse(DataLong_Subs_sim3$first.treat==0,0,1))
DataLong_Subs_sim3[first.treat == 0 | first.treat != 0 , mean(PatentsPerUnitTurnover), by = treat ] #
#0.008304803 for non-treated (0) and 0.005139279 for treated (1)
#considering the effects seen (-0.007 for simple and -0.0127 for dynamic):
0.0132/0.008304803 #1.589442 decrease on average for the simple
0.0134/0.008304803 #1.613524 for dynamic
rm(DataLong_Subs_sim3)
#11.3.8.R&D expenses/n of patents (New one)-----
#it was R and D, which was replaced by R&D expenses/n of patents
#to execute this part, the part 10.2.1.Prepare data should have been executed before
DataLong_Subs_sim_RAndD_Expenses <- DataLong_Subs_sim#[is.na(DataLong_Subs_sim$Turnover_extended)==F,]
DataLong_Subs_sim_RAndD_Expenses %<>%
group_by(id) %>%
mutate(Number_NAs = sum(is.na(RAndD_Expenses)==T)) %>%
ungroup()
table(DataLong_Subs_sim_RAndD_Expenses$Number_NAs)
DataLong_Subs_sim_RAndD_Expenses<- DataLong_Subs_sim_RAndD_Expenses[DataLong_Subs_sim_RAndD_Expenses$Number_NAs < 3,]
#fill missing data with the relatedness from the previous year;
DataLong_Subs_sim_RAndD_Expenses %<>% group_by(id) %>%
mutate(Turnover_extended = na.locf0(Turnover)) %>%
mutate(RAndD_Expenses_extended = na.locf0(RAndD_Expenses)) %>%
ungroup
DataLong_Subs_sim_RAndD_Expenses %<>% group_by(id) %>%
mutate(Turnover_extended = na.locf0(Turnover, fromLast = TRUE)) %>%
mutate(RAndD_Expenses_extended = na.locf0(RAndD_Expenses_extended, fromLast = TRUE)) %>%
ungroup
#stopped here -----
#better with 4 threshold:
#DataLong_Subs_sim_RAndD_Expenses$RandDExpensesTransformed <- (DataLong_Subs_sim_RAndD_Expenses$RAndD_Expenses_extended)*(DataLong_Subs_sim_RAndD_Expenses$Turnover_extended)
DataLong_Subs_sim_RAndD_Expenses$ShareRandDExpensesperNopatents <- (DataLong_Subs_sim_RAndD_Expenses$RandDExpensesTransformed)/(DataLong_Subs_sim_RAndD_Expenses$NoPatentsYearGUOtotal)
#stopped here -----
#better with 4 threshold:
DataLong_Subs_sim_RAndD_Expenses$RandDExpensesTransformed <- (DataLong_Subs_sim_RAndD_Expenses$RAndD_Expenses_extended)*(DataLong_Subs_sim_RAndD_Expenses$Turnover_extended)
DataLong_Subs_sim_RAndD_Expenses$ShareRandDExpensesperNopatents <- (DataLong_Subs_sim_RAndD_Expenses$RandDExpensesTransformed)/(DataLong_Subs_sim_RAndD_Expenses$NoPatentsYearGUOtotal)
#now I want to drop the complete company where the conditions below hold:
#1.Infinte values
Exclude1<-DataLong_Subs_sim_RAndD_Expenses[DataLong_Subs_sim_RAndD_Expenses$ShareRandDExpensesperNopatents == Inf,]
'%notin%' <- Negate('%in%')
DataLong_Subs_sim_RAndD_Expenses<-DataLong_Subs_sim_RAndD_Expenses[DataLong_Subs_sim_RAndD_Expenses$Company %notin% Exclude1$Company,] #27680-26240 = 1440 lines excluded
DataLong_Subs_sim_RAndD_Expenses<-DataLong_Subs_sim_RAndD_Expenses[DataLong_Subs_sim_RAndD_Expenses$id %notin% Exclude1$id,] #27680-26240 = 1440 lines excluded
rm(Exclude1)
#2. -Infinte
Exclude2<-DataLong_Subs_sim_RAndD_Expenses[DataLong_Subs_sim_RAndD_Expenses$ShareRandDExpensesperNopatents == -Inf,] #empty
DataLong_Subs_sim_RAndD_Expenses<-DataLong_Subs_sim_RAndD_Expenses[DataLong_Subs_sim_RAndD_Expenses$id %notin% Exclude2$id,] #
rm(Exclude2)
#3. NaN
Exclude2<-DataLong_Subs_sim_RAndD_Expenses[is.nan(DataLong_Subs_sim_RAndD_Expenses$ShareRandDExpensesperNopatents) == T,]
DataLong_Subs_sim_RAndD_Expenses<-DataLong_Subs_sim_RAndD_Expenses[DataLong_Subs_sim_RAndD_Expenses$id %notin% Exclude2$id,] #
rm(Exclude2)
#4. NA
Exclude3<-DataLong_Subs_sim_RAndD_Expenses[is.na(DataLong_Subs_sim_RAndD_Expenses$ShareRandDExpensesperNopatents) == T,] #empty
DataLong_Subs_sim_RAndD_Expenses<-DataLong_Subs_sim_RAndD_Expenses[DataLong_Subs_sim_RAndD_Expenses$id %notin% Exclude3$id,] #
rm(Exclude3)
#calculate the mean RAndD_Expenses of treated (1) versus non treated (0)
DataLong_test <- data.table(DataLong_Subs_sim_RAndD_Expenses)
DataLong_test$treat <- as.numeric(ifelse(DataLong_test$first.treat==0,0,1))
DataLong_test[first.treat == 0 | first.treat != 0 , mean(RAndD_Expenses_extended), by = treat ] #
DataLong_test[first.treat == 0 | first.treat != 0 , mean(ShareRandDExpensesperNopatents), by = treat ] #
#double check descriptives for Turnover:
Descript_data<-DataLong_Subs_sim_RAndD_Expenses[DataLong_Subs_sim_RAndD_Expenses$CurrentYear==2019,]
table(Descript_data$Size_class)
#Large company Medium sized company   Very large company
#10                    1                 2610
rm(Descript_data)
#check number of treated units:
Units <- DataLong_Subs_sim_RAndD_Expenses[DataLong_Subs_sim_RAndD_Expenses$treat == 1,]
length(unique(Units$id)) #444
rm(Units)
#Simple Aggregation
example_attgt <- att_gt(yname = "ShareRandDExpensesperNopatents",
tname = "CurrentYear",
idname = "id",
gname = "first.treat",
xformla = ~1,
data = DataLong_Subs_sim_RAndD_Expenses
)
#Dropped 38 units that were already treated in the first period.
agg.simple <- aggte(example_attgt, type = "simple")
summary(agg.simple) #effect -29865.73, error: 18008.61, [95%  Conf. Int.]: -65161.96    5430.502
#Dynamic Effects and Event Studies
agg.es <- aggte(example_attgt, type = "dynamic")
summary(agg.es) #effect -27061.3, error:  18619.97 , [95%  Conf. Int.]:  -63555.77    9433.175
ggdid(agg.es)
jpeg("Figures/Top2_NEW_R&D_per_turnover.jpg", width = 10, height = 3, units = 'in', res = 400)
ggdid(agg.es, title = "c) Average effect by length of exposure for the MNE") +
theme(legend.position="right") +
ylab("R&D expenses/No. Patents") +
xlab("Length of exposure") +
scale_color_manual(values=c("grey70","#FF3333")) + #CC0033 #dodgerblue2  #green3 #springgreen3
labs(color   = "Treatment")+
geom_vline(xintercept = 0, linetype="dotted",
color = "black", size=1, alpha = 0.3)
dev.off()
#now excluding holding companies:
#New: effect for MNE without holding-related sectors (6420 and 7010)
table(DataLong_Subs_sim_RAndD_Expenses$CategoryNace) #72 from 6420 and 36 from 7010;
Data_Long_filtered <- DataLong_Subs_sim_RAndD_Expenses[DataLong_Subs_sim_RAndD_Expenses$CategoryNace != 6420,]
Data_Long_filtered <- Data_Long_filtered[Data_Long_filtered$CategoryNace != 7010,]
table(Data_Long_filtered$CategoryNace) #0 from 6420 and 0 from 7010;
TreatedUnits <- Data_Long_filtered[Data_Long_filtered$treat == 1,]
length(unique(TreatedUnits$id)) #442
table(TreatedUnits$CategoryNace) #no 6420 nor 7010
TreatedUnits <- DataLong_Subs_sim_RAndD_Expenses[DataLong_Subs_sim_RAndD_Expenses$treat == 1,]
length(unique(TreatedUnits$id)) #444, so 2 treated units are lost by excluding both codes, all of them are from code 6420
table(TreatedUnits$CategoryNace)
rm(TreatedUnits)
#3.2.5.2.Simple Aggregation - robustness without holdings
#Simple Aggregation
example_attgt <- att_gt(yname = "ShareRandDExpensesperNopatents",
tname = "CurrentYear",
idname = "id",
gname = "first.treat",
xformla = ~1,
data = Data_Long_filtered
)
#Dropped 38 units that were already treated in the first period.
agg.simple <- aggte(example_attgt, type = "simple")
summary(agg.simple) #effect -30110.03, error: 17407.32, [95%  Conf. Int.]: -64227.76    4007.693
#Dynamic Effects and Event Studies
agg.es <- aggte(example_attgt, type = "dynamic")
summary(agg.es) #effect -27347.35, error:  17481.74 , [95%  Conf. Int.]:  -61610.93    6916.232
ggdid(agg.es)
jpeg("Figures/Top2_NEW_R&D_per_turnover_noholdings.jpg", width = 10, height = 4, units = 'in', res = 400)
ggdid(agg.es, title = "d) Average effect by length of exposure for the MNE - no holding companies") +
theme(legend.position="right") +
ylab("R&D expenses/No. Patents") +
xlab("Length of exposure") +
scale_color_manual(values=c("grey70","tan3")) + #CC0033 #dodgerblue2  #green3 #springgreen3
labs(color   = "Treatment")+
geom_vline(xintercept = 0, linetype="dotted",
color = "black", size=1, alpha = 0.3)
dev.off()
#calculate the mean Turnover_extended of treated (1) versus non treated (0)
DataLong_Subs_sim3 <- data.table(DataLong_Subs_sim_RAndD_Expenses)
DataLong_Subs_sim3$treat <- as.numeric(ifelse(DataLong_Subs_sim3$first.treat==0,0,1))
DataLong_Subs_sim3[first.treat == 0 | first.treat != 0 , mean(ShareRandDExpensesperNopatents), by = treat ] #
#37215.73 for non-treated (0) and 112120.46 for treated (1)
#considering the effects seen (-29865.73 for simple and -27061.3 for dynamic):
29865.73/37215.73 #0.8025029 decrease on average for the simple
27061.3/37215.73 #0.7271468 decrease for dynamic
rm(DataLong_Subs_sim3)
37215.73 - 29865.73*37215.73  #-1111437728
(1-29865.73)*37215.73 #-1111437728
112120.46 + 29865.73*112120.46 #-3348671506
DataLong_Subs_sim3 <- data.table(Data_Long_filtered)
DataLong_Subs_sim3$treat <- as.numeric(ifelse(DataLong_Subs_sim3$first.treat==0,0,1))
DataLong_Subs_sim3[first.treat == 0 | first.treat != 0 , mean(ShareRandDExpensesperNopatents), by = treat ] #
#considering the effects seen (-30110.03 for simple and -27347.35 for dynamic) for holdings excluded:
30110.03/37271.02 #0.8078671 decrease on average for the simple
27347.35/37271.02 #0.733743 decrease for dynamic
length(unique(DataLong_Subs_sim_RAndD_Expenses$Company)) #1929 (b4 it was 1946)
table(DataLong_Subs_sim_RAndD_Expenses$Group)
length(unique(DataLong_Subs_sim_RAndD_Expenses$id)) #2621 (b4 it was 2643)
library(data.table)
library(dplyr)
library(zoo) #for some reason the function na.locf is just in the zoo package for me now
library(magrittr) # For extra-piping operators (eg. %<>%)
library(psych) #for descriptives
library(MatchIt)
library(lmtest) #for coeftest
library(sandwich) #for vcovCL
library(did) #for treatment effect over distinct periods of time
library(stringr) #for extracting numbers from factors
library(readr) #for reading text files;
#1.Relatedness----
#1.1.MNE Level -----
#1.1.1.Prepare data ----
rm(list=ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
DataLong_Subs_sim <- read.csv("Data/DataLong_Subs_sim_MNEs2.csv", sep = ";", header = TRUE, dec=",")
#2.Relatedness effects across sectors and the self-selection bias -
#2.1.By most used codes-----
#This is the first proposed distance measure, in which all companies that belong to ICT-related sectors (NACE 5829, 6201, 6311,
#6312, 6391, #and 6399) are put in the closest to AI category, MNEs previously classified into the “Less used codes” (which
#comprehends #the 20% NACE codes less used by AI adopters) are put in the category with the greatest distance to AI, and all
#remaining MNEs are put in a median group
rm(list=ls())
